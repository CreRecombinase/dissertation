#+TITLE: Functional Enrichment by Expectation Maximization
#+SETUPFILE: setup.org
#+OPTIONS: toc:2

# * Overview
#   Combine gene-level Bayes-Factors from whole-exome sequencing studies with pre-existing biological knowledge in the form of genic and genomic annotation to identify causal genes and enriched pathways. 
# *** Rationale 
#     Preliminary results using data from an Autism Spectrum Disorder implicate previously identified and novel genes and annotations as being disease-related.  In ASD, transmitted and /de novo/ variants are known to play a role in disease risk.  Among the top associated annotations are  several Gene Ontology terms related to neural development, and features related to mutational constraint (as defined by the ExAC missense Z score). 
#     The combination of gene-level summaries of phenotypic association with relevant gene-level annotations can dramatically improve in the discrimination betweeen causal genes and pathways from non-causal ones.  We further hypothesize that explicitly modeling the inherently hierarchical nature of many gene-level annotations can further improve classification.  We believe that in the case of disease, that features related to mutational constraint,relevant tissue-level expression, and phylogenetic conservation will be enriched functional classes.
# *** Genomic Annotation
#     The gene-level annotations will come from several sources.  The Exome Aggregation Consortiom (ExAC) has created a list of gene-level constraint Z scores for every gene in the genome.  The constraint scores are based on the number of observed non-synonymous mutational events per-gene versus what would be expected from the length of the gene and the local mutation rate. The Gene Ontology Consortium maintains a database describing genes in a hierarchical manner according to their molecular function as well as  which biological processes they are thought to be involved in. Genes associated with a common biological process can be considered members of a gene set, which is a kind of binary gene-level annotation.  There also exist a large number of pre-existing datasets that can be used to create gene-level annotation.  The results of gene-expression profiling experiments can be summarised  by annotating a gene according to some summary of its expression level relative to other genes, or if differential gene-expression has been investigated in a context deemed relevant, a summary of that differential expression in the form of a gene-level Z-score can be incorporated.  More generally, the results of previous experiments can be summarised as a list of candidate genes.  
# *** Model Outline
# #     For each gene, let $Z_i=1$ indicate that this gene is "causal" for our phenotype of interest, and $Z_i=0$ if it is not. If we have a gene-level model of whether or not a gene is a causal gene, we can define a gene-level Bayes factor $B_i=\frac{P(x_i|Z_i=1)}{P(x_i|Z_i=0)}$.   The prior probability that a gene is causal $P(Z_i=1)=\pi_i$ depends on a vector of gene-level annotations, $A_i$, and a vector of effects of each feature $\beta$:

# #     $$\text{logit}(P(Z_i=1))=A_i \beta_i$$ 
    
# #     Conditioning on $\beta$,or alternatively conditioning on $pi_i$: (remember $\pi$ is a function of $\beta$, which is not known, and $A$, which is known) 
# #     $$P(x|\pi) \propto \prod_i [\pi_i B_i+(1-\pi)]$$
# #     We can use the Expectation Maximization algorithm to estimate the posterior probability that $Z_i=1$, as well as the $\beta$s for each annotation
    
# #     The joint probability of both $Z_i$ and $x_i$ conditioning on $\beta$ is :
# #     $$P(x_i,Z_i|\pi_i)=P(Z_i|\pi_i)P(x_i|Z_i)=\pi_i^{Z_i}(1-\pi)^{1-Z_i}B_i^{Z_i}$$
# #     The *E* Step is the expected value of the log likelihood function:
# #     $$Q(\beta|\beta^{(t)})=\sum_i \sum_{Z_i} P(Z_i|x_i,\beta^{(t)} \log(P(x,Z_i|\beta))$$
# #     This is the expectation of $Z$ for each gene.  We can then find the $\beta$ that maximizes the likelihood at the current estimate of $Z$.
    
# #     If we start with some reasonable guess for $Z$ (like having $P(Z_i=1)$ be some function of $B_i$), we can calculate the posterior probability and estimates of $\beta$.   

* Introduction

* Method

** Model

Suppose we have gathered genetic data for a set of individuals to identify which genes are causally related to a disease or trait of interest.  For each gene $g \in \{1 \dots G\}$, let the indicator variable $z_g=1$ indicate that
gene $g$ is causaully related to our trait or disease of interest.  We can summarise the evidence for and against our hypothesis that $z_g=1$ using a bayes factor:

$$B_g=\frac{P(x_g|z_g=1)}{P(x_g|z_g=0)}$$

where $x_g$ is the subset of the aforementioned genetic data corresponding to the $g$th gene.

Suppose further that we know a set of $F$ functional annotations or properties for each of our $G$ genes.  Let $\textbf{a}_g$ denote the length $F$ vector of annotations for gene $g$, and $\textbf{A}$ denote the matrix with $F$ rows and $G$ 
columns consisting of $\textbf{a}_1 ...  \textbf{a}_G$
We define the vector $\boldsymbol{\beta}$ and the function $\pi(\boldsymbol{\beta},\textbf{a}_g)$ such that:

$$P\pi(\boldsymbol{\beta},\textbf{a}_g) =  \frac{1}{1+e^{-(\beta_{0}+\sum_{f=1}^F{A_{f,g}\beta_f})}} =  (z_g=1|\textbf{a}_g,\boldsymbol{\beta})$$

We can compute the likelihood of a particular value of $\boldsymbol{\beta}$ as:

$$ P(\textbf{x}|\boldsymbol{\beta},\textbf{A})=\prod_{g=1}^{G}P(x_g|\boldsymbol{\beta})=\prod_{g=1}^{G}[\pi(\boldsymbol{\beta},\textbf{a}_g) P(x_g|z_g=1)+(1-\pi(\boldsymbol{\beta},\textbf{a}_g))P(x_g|z_g=0)]$$

By factorizing out the term $\prod_{g=1}^{G} P(x_g|z_g=0)$ which does not depend on $\boldsymbol{\beta}$, we can express the likelihood for $\boldsymbol{\beta}$ in terms of $\textbf{B}$:


$$P(\textbf{x}|\boldsymbol{\beta},\textbf{A}) \propto \prod_{g=1}^{G}[\pi(\boldsymbol{\beta},\textbf{a}_g)B_g+(1-\pi(\boldsymbol{\beta},\textbf{a}_g))]$$


Given a particular value of $\boldsymbol{\beta}$, we arrive at a new posterior:

$$P(z_g=1 | x_g, \boldsymbol{\beta},\textbf{a}_g) = \frac{\pi(\boldsymbol{\beta},\textbf{a}_g) B_g}{\pi(\boldsymbol{\beta} , \textbf{a}_g) B_g + 1 - \pi(\boldsymbol{\beta},\textbf{a}_g)}$$

# } $$

** Algorithm


Our goal is both to estimate $\boldsymbol{\beta}$ as well as $P(Z_g=1|\textbf{a}_g,\boldsymbol{\beta},x_g)$ for each gene.  We use the EM algorithm cite:EM_algo to
obtain a maximum likelihood estimate for $\boldsymbol{\beta}$.  If $\textbf{z}$ is our latent variable then our complete data likelihood is:

$$P(\textbf{x},\textbf{z}|\boldsymbol{\beta},\textbf{A}) = 
\prod_{g=1}^G \left[P(z_g|\boldsymbol{\beta},\textbf{a}_g) P(x_g|z_g)\right] = 
\prod_{g=1}^G \left[\pi(\boldsymbol{\beta},\textbf{a}_g)^{z_g} (1-\pi(\boldsymbol{\beta},\textbf{a}_g))^{1-z_g}B_g^{z_g}\right]$$ 

From which we form the $Q$ function

$$ Q(\boldsymbol{\beta}|\boldsymbol{\beta}_n) = \sum_{g=1}^G \left[P(z_g=1|x_g,\boldsymbol{\beta}_n,\textbf{a}_g) \log\left(P(x_g,z_g=1|\boldsymbol{\beta})\right) +
P(z_g=0|x_g,\boldsymbol{\beta}_n,\textbf{a}_g) \log\left(P(x_g,z_g=0|\boldsymbol{\beta})\right) \right] = 
\sum_{g=1}^G \left [u_g(\log(\pi(\boldsymbol{\beta_n},\textbf{a}_g))+B_g)+(1-u_g)\log(1-\pi(\boldsymbol{\beta_n},\textbf{a}_g)) \right]$$

Where $u_g=P(z_g=1|x_g,\boldsymbol{\beta_n},\textbf{a}_g) = \frac{\pi(\boldsymbol{\beta_n},\textbf{a}_g)B_g}{\pi(\boldsymbol{\beta_n},\textbf{a}_g)B_g+1-\pi(\boldsymbol{\beta_n},\textbf{a}_g)}$


** Data 


** Software

Our method is distributed as a freely available R package [[https://github.com/CreRecombinase/FGEM][FGEM]].  FGEM relies on the ~SQUAREM~ package to accelerate EM convergence  cite:squarem   
and the hot-path functions are implemented as C++ functions using the ~RcppArmadillo~ cite:RcppArmadillo package.


* Results

* Discussion






bibliographystyle:unsrt
bibliography:references.bib




